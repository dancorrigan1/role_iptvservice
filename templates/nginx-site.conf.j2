# ==== generated by Ansible ====
# Local web root for yiafe.com + IPTV auth/proxy

{% set hosts = role_iptvservice__iptv_hostname | default(['yiafe.com']) %}
{% set first_host = (hosts | first) | trim %}
{% set server_names = (hosts + ['iptv.' ~ first_host, 'test.' ~ first_host]) | unique %}
{% set php_fpm = role_iptvservice__php_fpm | default('unix:/run/php/php8.3-fpm.sock') %}

server {
    listen 80;
    server_name {{ server_names | join(' ') }};

    access_log /var/log/nginx/yiafe_access.log;
    error_log  /var/log/nginx/yiafe_error.log;

    # ---------------------------------------------
    # INTERNAL AUTH SUBREQUEST TO FLASK
    # ---------------------------------------------
    location = /_auth {
        internal;
        proxy_pass http://127.0.0.1:{{ role_iptvservice__auth_port }}/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header Authorization $http_authorization;

        # Variables are set in calling locations:
        proxy_set_header X-Q-User    $saved_user;
        proxy_set_header X-Q-Pass    $saved_pass;
        proxy_set_header X-Path-User $path_user;
        proxy_set_header X-Orig-Args $saved_args;
        proxy_set_header X-Original-URI $request_uri;

        access_log /var/log/nginx/yiafe_auth_access.log;
    }

    # If auth says 401/403, handle redirect here (X-Redirect) else return 401.
    error_page 401 403 = @auth_fail;

    location @auth_fail {
        # Pass through optional redirect from app
        if ($upstream_http_x_redirect != "") { return 302 $upstream_http_x_redirect; }
        return 401;
    }

    # ==========================================================
    #  LOCAL SITE (NO IPTV AUTH): /, /calc, /ae, /contact, /iptvservice, /curve
    # ==========================================================
    # Serve "/" from local root and EXECUTE index.php
    location = / {
        root /var/www/html/yiafe.com;
        # rewrite to index.php to ensure PHP executes, not static return
        rewrite ^ /index.php last;
    }

    # PHP handler for /index.php at the root
    location = /index.php {
        root /var/www/html/yiafe.com;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass {{ php_fpm }};
    }

    # Static for root (images/css/js/etc)
    location ^~ /assets/ {
        root /var/www/html/yiafe.com;
        try_files $uri =404;
    }

    # Friendly redirect to add trailing slash for the local sections if called without it
    location = /calc       { return 301 /calc/; }
    location = /ae         { return 301 /ae/; }
    location = /contact    { return 301 /contact/; }
    location = /iptvservice{ return 301 /iptvservice/; }
    location = /curve      { return 301 /curve/; }

    # Local sections (static + PHP)
    location ^~ /calc/ {
        root /var/www/html/yiafe.com;
        index index.php index.html;
        try_files $uri $uri/ /calc/index.php?$args;
    }
    location ^~ /ae/ {
        root /var/www/html/yiafe.com;
        index index.php index.html;
        try_files $uri $uri/ /ae/index.php?$args;
    }
    location ^~ /contact/ {
        root /var/www/html/yiafe.com;
        index index.php index.html;
        try_files $uri $uri/ /contact/index.php?$args;
    }
    location ^~ /iptvservice/ {
        root /var/www/html/yiafe.com;
        index index.php index.html;
        try_files $uri $uri/ /iptvservice/index.php?$args;
    }
    location ^~ /curve/ {
        root /var/www/html/yiafe.com;
        index index.php index.html;
        try_files $uri $uri/ /curve/index.php?$args;
    }

    # PHP for those local sections ONLY
    location ~ ^/(calc|ae|contact|iptvservice|curve)/.+\.php$ {
        root /var/www/html/yiafe.com;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass {{ php_fpm }};
    }

    # ==========================================================
    #  IPTV PROXY (AUTH-GATED)
    # ==========================================================

    # -------- Helper: capture path user (first segment) when needed
    set $path_user "";
    if ($uri ~ "^/([^/]+)") { set $path_user $1; }

    # ---------- Player API (non-prefixed, e.g. /player_api.php)
    location = /player_api.php {
        set $saved_args $args;
        set $saved_user $arg_username;
        set $saved_pass $arg_password;

        auth_request /_auth;

        auth_request_set $backend      $upstream_http_x_backend;
        auth_request_set $basic        $upstream_http_x_basic;
        auth_request_set $fwd_args     $upstream_http_x_rewrite_args;
        auth_request_set $display_user $upstream_http_x_display_user;
        auth_request_set $display_pass $upstream_http_x_display_pass;
        auth_request_set $desired_ext  $upstream_http_x_desired_ext;

        proxy_pass $backend/player_api.php?$fwd_args;

        proxy_set_header Authorization $basic;
        proxy_set_header Host $host;

        proxy_set_header Accept-Encoding "";
        gunzip on;

        sub_filter_once off;
        sub_filter_types *;

        sub_filter "\"username\":\"$display_user\"" "\"username\":\"$display_user\"";
        sub_filter "\"password\":\"$display_pass\"" "\"password\":\"$display_pass\"";
        sub_filter "\"container_extension\":\"\"" "\"container_extension\":\"$desired_ext\"";
        sub_filter "\"container_extension\":null"  "\"container_extension\":\"$desired_ext\"";

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 1h;
        send_timeout 1h;
    }

    # ---------- get.php (non-prefixed)
    location = /get.php {
        set $saved_args $args;
        set $saved_user $arg_username;
        set $saved_pass $arg_password;

        auth_request /_auth;

        auth_request_set $backend      $upstream_http_x_backend;
        auth_request_set $basic        $upstream_http_x_basic;
        auth_request_set $fwd_args     $upstream_http_x_rewrite_args;

        proxy_pass $backend/get.php?$fwd_args;

        proxy_set_header Authorization $basic;
        proxy_set_header Host $host;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 1h;
        send_timeout 1h;
    }

    # ---------- Prefixed API (/USERNAME/player_api.php or /USERNAME/get.php or /USERNAME/xmltv.php)
    location ~ ^/([^/]+)/(player_api|get|xmltv)\.php$ {
        set $saved_args $args;
        set $saved_user $arg_username;
        if ($saved_user = "") { set $saved_user $1; }
        set $saved_pass $arg_password;

        auth_request /_auth;

        auth_request_set $backend      $upstream_http_x_backend;
        auth_request_set $basic        $upstream_http_x_basic;
        auth_request_set $fwd_args     $upstream_http_x_rewrite_args;
        auth_request_set $display_user $upstream_http_x_display_user;
        auth_request_set $display_pass $upstream_http_x_display_pass;
        auth_request_set $desired_ext  $upstream_http_x_desired_ext;

        proxy_pass $backend/$2.php?$fwd_args;

        proxy_set_header Authorization $basic;
        proxy_set_header Host $host;

        proxy_set_header Accept-Encoding "";
        gunzip on;

        sub_filter_once off;
        sub_filter_types *;

        sub_filter "\"username\":\"$display_user\"" "\"username\":\"$display_user\"";
        sub_filter "\"password\":\"$display_pass\"" "\"password\":\"$display_pass\"";
        sub_filter "\"container_extension\":\"\"" "\"container_extension\":\"$desired_ext\"";
        sub_filter "\"container_extension\":null"  "\"container_extension\":\"$desired_ext\"";

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 1h;
        send_timeout 1h;
    }

    # ---------- LIVE .m3u8 playlists (with or without /USERNAME prefix)
    location ~ ^/(?:[^/]+/)?live/([^/]+)/([^/]+)/(\d+)\.m3u8$ {
        set $saved_args $args;
        set $saved_user $1;
        set $saved_pass $2;

        auth_request /_auth;

        auth_request_set $backend    $upstream_http_x_backend;
        auth_request_set $basic      $upstream_http_x_basic;
        auth_request_set $proxy_user $upstream_http_x_proxy_user;
        auth_request_set $proxy_pass $upstream_http_x_proxy_pass;

        proxy_pass $backend/live/$proxy_user/$proxy_pass/$3.m3u8$is_args$args;

        proxy_set_header Authorization $basic;
        proxy_set_header Host $host;

        proxy_set_header Accept-Encoding "";
        gunzip on;

        sub_filter_once off;
        sub_filter_types application/x-mpegURL application/vnd.apple.mpegurl application/octet-stream text/plain text/*;
        sub_filter "/live/$proxy_user/$proxy_pass/" "/live/$saved_user/$saved_pass/";

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 1h;
        send_timeout 1h;
    }

    # ---------- Segments & other media under live/movie/series/timeshift (with or without /USERNAME prefix)
    location ~ ^/(?:[^/]+/)?(live|series|movie|timeshift)/([^/]+)/([^/]+)/(.*)$ {
        set $saved_args $args;
        set $saved_user $2;
        set $saved_pass $3;

        auth_request /_auth;

        auth_request_set $backend    $upstream_http_x_backend;
        auth_request_set $basic      $upstream_http_x_basic;
        auth_request_set $proxy_user $upstream_http_x_proxy_user;
        auth_request_set $proxy_pass $upstream_http_x_proxy_pass;

        proxy_pass $backend/$1/$proxy_user/$proxy_pass/$4;

        proxy_set_header Authorization $basic;
        proxy_set_header Host $host;

        proxy_set_header Range      $http_range;
        proxy_set_header If-Range   $http_if_range;
        proxy_set_header Referer    $http_referer;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header Accept     $http_accept;
        proxy_set_header Origin     $http_origin;
        proxy_force_ranges on;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 1h;
        send_timeout 1h;
    }

    # ---------- Catch-all for other IPTV API calls (not handled above)
    location / {
        set $saved_args $args;
        set $saved_user $arg_username;
        if ($saved_user = "") {
            # Fall back to first path segment as a possible username
            if ($uri ~ "^/([^/]+)") { set $saved_user $1; }
        }
        set $saved_pass $arg_password;

        auth_request /_auth;

        auth_request_set $backend      $upstream_http_x_backend;
        auth_request_set $basic        $upstream_http_x_basic;
        auth_request_set $fwd_args     $upstream_http_x_rewrite_args;
        auth_request_set $display_user $upstream_http_x_display_user;
        auth_request_set $display_pass $upstream_http_x_display_pass;
        auth_request_set $desired_ext  $upstream_http_x_desired_ext;

        # Strip optional /USERNAME/ prefix for backend
        set $api_path $uri;
        if ($uri ~ "^/[^/]+/(.*\.php)$") { set $api_path "/$1"; }

        proxy_pass $backend$api_path?$fwd_args;

        proxy_set_header Authorization $basic;
        proxy_set_header Host $host;

        proxy_set_header Accept-Encoding "";
        gunzip on;

        sub_filter_once off;
        sub_filter_types *;

        sub_filter "\"username\":\"$display_user\"" "\"username\":\"$display_user\"";
        sub_filter "\"password\":\"$display_pass\"" "\"password\":\"$display_pass\"";
        sub_filter "\"container_extension\":\"\"" "\"container_extension\":\"$desired_ext\"";
        sub_filter "\"container_extension\":null"  "\"container_extension\":\"$desired_ext\"";

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_read_timeout 1h;
        send_timeout 1h;
    }
}
