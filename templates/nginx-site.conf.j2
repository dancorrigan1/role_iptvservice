# {{ ansible_managed | comment }}

{% for provider in role_iptvservice__credentials  %}

# upstreams for {{ provider.name }}

{% for user in provider.proxy_users %}
# upstream for {{ user.name }}
upstream iptv_{{ user.username }} {
   ip_hash;
{% for upstream in __proxy_users | shuffle | selectattr('proxy_username', 'equalto', user.username) %}
   server {{ role_iptvservice__iptv_hostname | first }}:{{ upstream.proxy_port }}; # {{ upstream.xtream_account }} - {{ upstream.xtream_user }}
{% endfor %}
}

{% endfor %}
{% endfor %}

# log_format
log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
   '$status $body_bytes_sent "$http_referer" '
   '"$http_user_agent" '
   '$request_time $upstream_response_time $iptv_agents $upstream_addr $upstream_status';

# http / port 80
server {
   listen 80;
   server_name {{ role_iptvservice__iptv_hostname | join(' ') }};
{% if role_iptvservice__iptv_ssl_certificate is not defined and role_iptvservice__iptv_ssl_certificate_key is not defined %}
   access_log /var/log/nginx/{{ role_iptvservice__iptv_hostname | first }}_access.log main_ext;
   error_log /var/log/nginx/{{ role_iptvservice__iptv_hostname | first }}_error.log;
   index index.html index.php;
   root /var/www/html/{{ role_iptvservice__iptv_hostname | first }};

{% for provider in role_iptvservice__credentials  %}

   # proxies for {{ provider.name }}

{% for user in provider.proxy_users %}
   # Proxy for {{ user.name }}
   location ^~ /{{ user.username }}/ {
      if ($iptv_agents = 0) {
        return 403;
      }
      proxy_pass http://iptv_{{ user.username }}/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #proxy_set_header X-Forwarded-Proto $scheme;
      keepalive_timeout 60s;
   }

{% endfor %}
{% endfor %}

    # root
    location / {
       try_files $uri $uri/ =404;
    }

    # PHP
    location ~ \.php$ {
      try_files $uri =404;
      fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      include fastcgi_params;
    }

{% else %}
   return 301 https://$server_name$request_uri;
{% endif %}
}

{% if role_iptvservice__iptv_ssl_certificate is defined and role_iptvservice__iptv_ssl_certificate_key is defined %}
# https / port 443
server {
   listen 443 ssl;
   server_name {{ role_iptvservice__iptv_hostname | join(' ') }};
   access_log /var/log/nginx/{{ role_iptvservice__iptv_hostname | first }}_access.log main_ext;
   error_log /var/log/nginx/{{ role_iptvservice__iptv_hostname | first }}_error.log;
   index index.html index.php;
   root /var/www/html/{{ role_iptvservice__iptv_hostname | first }};
   include /etc/nginx/snippets/letsencrypt.conf;
{% for provider in role_iptvservice__credentials  %}

   # proxies for {{ provider.name }}

{% for user in provider.proxy_users %}
   # Proxy for {{ user.name }}
   location ^~ /{{ user.username }}/ {
      if ($iptv_agents = 0) {
        return 403;
      }
      proxy_pass http://iptv_{{ user.username }}/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      keepalive_timeout 60s;
   }

{% endfor %}
{% endfor %}

   # root
   location / {
      try_files $uri $uri/ =404;
   }

   # PHP
   location ~ \.php$ {
      try_files $uri =404;
      fastcgi_pass unix:/var/run/php/php-fpm.sock;
      fastcgi_index index.php;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
   }

   # SSL
   ssl_certificate {{ role_iptvservice__iptv_ssl_certificate }};
   ssl_certificate_key {{ role_iptvservice__iptv_ssl_certificate_key }};
}
{% endif %}
