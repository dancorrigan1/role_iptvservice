---
- name: Test Connect to Each Upstream Account with URI module
  ansible.builtin.uri:
    url: "{{ item.0.url }}/player_api.php?username={{ item.1.username }}&password={{ item.1.password }}"
    method: GET
    status_code: 200
  loop: "{{ role_iptvservice__credentials | subelements('provider_credentials') }}"
  loop_control:
    label: >-
      Checking {{ item.1.account }}:{{ item.1.username }} at {{ item.0.url }}
  register: __upstream_test_results
  ignore_errors: true
  no_log: false

- name: Report any failed upstream account connections
  ansible.builtin.debug:
    msg: "Failed to connect to upstream account {{ item.item.1.account }} at {{ item.item.0.url }} with username {{ item.item.1.username }}"
  when: (item.json is defined and item.json.user_info.auth != 1) or item.status == '512'
  loop: "{{ __upstream_test_results.results }}"
  loop_control:
    label: >-
      Displaying {{ item.item.1.account }}:{{ item.item.1.username }} at {{ item.item.0.url }}

- name: "Remove Upstreams for Overloaded Accounts"
  ansible.builtin.replace:
    path: "{{ role_iptvservice__nginx_conf }}"
    regexp: '^(\s+server.*{{ item.item.1.account }}.*)$'
    replace: '# \1'
  loop: "{{ __upstream_test_results.results }}"
  loop_control:
    label: >-
      Removing upstream for Account '{{ item.item.1.account }}' from NGINX Config
  when: (item.json is defined and item.json.user_info.auth != 1) or item.status == '512'

- name: "Number Connections | Get pids of iptv-proxy processes of overloaded accounts"
  community.general.pids:
    pattern: "--xtream-user {{ item.item.1.username }}"
  become: true
  loop: "{{ __upstream_test_results.results }}"
  when: (item.json is defined and item.json.user_info.auth != 1) or item.status == '512'
  loop_control:
    label: >-
      Getting PIDs of iptv-proxy process for Account '{{ item.item.1.account }}'
    index_var: __my_idx
    extended: true
    extended_allitems: false
  register: __proxy_pids

- name: Debug
  ansible.builtin.debug:
    msg: '{{ item }}'
  loop: "{{ __proxy_pids.results }}"

# - name: "Number Connections | Kill pids of iptv-proxy processes of overloaded accounts"
#   ansible.builtin.command:
#     cmd: kill "{{ item.pids | first }}"
#   become: true
#   loop: "{{ __proxy_pids.results }}"
#   loop_control:
#     label: >-
#       Killing iptv-proxy PID {{ item.pids | first }} ({{ __my_idx + 1 }} / {{ ansible_loop.length }})
#     index_var: __my_idx
#     extended: true
#     extended_allitems: false
#   changed_when: true
#   when: item.pids | length > 0

- name: "Number Connections | Email report of removed upstreams"
  community.general.mail:
    from: "{{ role_iptvservice__email_sender }}"
    to: "{{ role_iptvservice__email_recipients }}"
    subject: "URGENT: Upstreams removed from IPTV Proxy"
    host: "{{ role_iptvservice__email_server }}"
    port: 25
    secure: never
    body: "{{ __upstream_test_results.results }}"
  when: __upstream_test_results.results | selectattr('json.user_info.auth', 'ne', 1) | list | length > 0
...
