---
- name: "User IPs | Ensure user_ips directory exists"
  ansible.builtin.file:
    path: "{{ role_iptvservice__iptv_logs_path }}/user_ips"
    state: directory
    mode: '0750'

- name: "User IPs | Check if User IP Files Exist"
  ansible.builtin.stat:
    path: "{{ role_iptvservice__iptv_logs_path }}/user_ips/{{ item.user }}"
  register: __user_ip_file
  loop_control:
    label: >-
      Checking for '{{ item.user }}'
    index_var: __my_idx
    extended: true
    extended_allitems: false

- name: "User IPs | Check if IPs exist in user File"
  ansible.builtin.lineinfile:
    path: '{{ __user_ip_file.stat.path }}'
    regexp: '{{ ip }}'
    state: absent
  check_mode: true
  register: __user_ip_file_check
  when: __user_ip_file.stat.exists | bool
  loop: '{{ item.ip_list }}'
  loop_control:
    loop_var: ip
    label: >-
      Checking '{{ item.user }}' for '{{ ip }}'
    index_var: __my_idx
    extended: true
    extended_allitems: false

- name: "User IPs | Add new IP to exiting user IP file"
  ansible.builtin.lineinfile:
    path: '{{ __user_ip_file.stat.path }}'
    line: '{{ __ip_file_check.ip }}'
    state: present
  when:
    - __user_ip_file.stat.exists | bool
    - __ip_file_check.found == 0
  register: __add_ip
  loop: '{{ __user_ip_file_check.results }}'
  loop_control:
    loop_var: __ip_file_check
    label: >-
      Adding '{{ __ip_file_check.ip }}' to existing IP user file for '{{ item.user }}'
    index_var: __my_idx
    extended: true
    extended_allitems: false

- name: "User IPs | Add new IP to new file user IP file"
  ansible.builtin.lineinfile:
    path: '{{ role_iptvservice__iptv_logs_path }}/user_ips/{{ item.user }}'
    line: '{{ __ip_file_check.ip }}'
    state: present
    create: true
    mode: '0644'
  when:
    - not __user_ip_file.stat.exists | bool
  register: __add_ip_new_file
  loop: '{{ __user_ip_file_check.results }}'
  loop_control:
    loop_var: __ip_file_check
    label: >-
      Adding '{{ __ip_file_check.ip }}' to new IP user file for '{{ item.user }}'
    index_var: __my_idx
    extended: true
    extended_allitems: false

- name: "User IPs | Set fact about existing user IP file status"
  ansible.builtin.set_fact:
    __ip_added_existing: >-
      {%- set __ip_added_existing = __ip_added_existing | default([]) -%}
      {%- set user = 'user' -%}
      {%- set ip = 'ip' -%}
      {%- set new = 'new' -%}
      {%- for __ip in __add_ip.results -%}
        {%- set __new = 'true' if __ip.changed | bool else 'false' -%}
        {%- set item_dict = {
          user: item.user,
          ip: __ip.__ip_file_check.ip,
          new: __new}
        -%}
      {%- set __ip_added_existing = __ip_added_existing.append(item_dict) -%}
      {%- endfor -%}
      {{ __ip_added_existing }}

- name: "User IPs | Set fact about new user IP file status"
  ansible.builtin.set_fact:
    __ip_added_new: >-
      {%- set __ip_added_new = __ip_added_new | default([]) -%}
      {%- set user = 'user' -%}
      {%- set ip = 'ip' -%}
      {%- set new = 'new' -%}
      {%- for __ip in __add_ip_new_file.results -%}
        {%- set __new = 'true' if not __user_ip_file.stat.exists | bool else 'false' -%}
        {%- set item_dict = {
          user: item.user,
          ip: __ip.__ip_file_check.ip,
          new: __new}
        -%}
      {%- set __ip_added_new = __ip_added_new.append(item_dict) -%}
      {%- endfor -%}
      {{ __ip_added_new }}
...
