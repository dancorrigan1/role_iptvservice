---
- name: Gather facts (for ansible_distribution etc.)
  ansible.builtin.setup:

# 1) Build a deterministic, flattened list of upstream accounts -> backends
- name: Build backend list deterministically
  ansible.builtin.set_fact:
    __backend_flat: >-
      {{
        role_iptvservice__credentials
        | map('combine', {'provider': attribute('name')})
        | map('extract', ['provider','url','provider_credentials'])
        | list
      }}
  vars:
    attribute: name

- name: Flatten provider_credentials with stable ordering
  ansible.builtin.set_fact:
    __backends: >-
      {%- set out = [] -%}
      {%- set start = role_iptvservice__proxy_start_port | int -%}
      {%- set idx = 0 -%}
      {%- for prov in (role_iptvservice__credentials | sort(attribute='name')) -%}
        {%- for cred in (prov.provider_credentials | sort(attribute='account')) -%}
          {%- set _ = out.append({
            'name': 'up' ~ (idx + 1),
            'provider': prov.name,
            'provider_url': prov.url,
            'account': cred.account,
            'xtream_user': cred.username,
            'xtream_pass': cred.password,
            'proxy_user': cred.account,
            'proxy_pass': cred.account,
            'port': start + idx
          }) -%}
          {%- set idx = idx + 1 -%}
        {%- endfor -%}
      {%- endfor -%}
      {{ out }}

# 2) Build users map (merge all proxy_users from all providers)
- name: Build users dict
  ansible.builtin.set_fact:
    __users: >-
      {%- set d = {} -%}
      {%- for prov in role_iptvservice__credentials -%}
        {%- for u in prov.proxy_users | default([]) -%}
          {%- set _ = d.update({ u.username: {'password': u.password, 'live': u.live | default('true'), 'vod': u.vod | default('true')} }) -%}
        {%- endfor -%}
      {%- endfor -%}
      {{ d }}

# 3) Include role parts
- name: Setup iptv-auth app
  ansible.builtin.include_tasks: auth.yml

- name: Setup iptv-proxy instances
  ansible.builtin.include_tasks: proxy.yml

- name: Setup nginx site
  ansible.builtin.include_tasks: nginx.yml
